// <auto-generated />
using System;
using LMS.WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LMS.WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210225214937_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LMS.WebAPI.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AllDay")
                        .HasColumnType("bit");

                    b.Property<string>("CustomField1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Label")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RecurrenceInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReminderInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int")
                        .HasColumnName("ResourceID");

                    b.Property<string>("ResourceIds")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ResourceIDs");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressCorrespondence")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyCase")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountryId")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("LeadingLawyerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ResponsibleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TypeClientId")
                        .HasColumnType("int");

                    b.Property<string>("VatId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Web")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("LeadingLawyerId");

                    b.HasIndex("PartnerId");

                    b.HasIndex("TypeClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.ClientsReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Hours")
                        .HasColumnType("int");

                    b.Property<int?>("Minutes")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<bool?>("Paid")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal?>("TimeInHours")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int?>("TimeInMinutes")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("TypeData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("VatRate")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ClientsReport");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Country", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = "100",
                            Name = "Bulgaria"
                        });
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Currency", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Code")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = "975",
                            Code = "BGN",
                            Name = "Bulgarian lev"
                        },
                        new
                        {
                            Id = "978",
                            Code = "EUR",
                            Name = "Euro"
                        },
                        new
                        {
                            Id = "840",
                            Code = "USD",
                            Name = "United States dollar"
                        },
                        new
                        {
                            Id = "826",
                            Code = "GBP",
                            Name = "Pound sterling"
                        });
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AspNetRoleId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AspNetUserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("AspNetRoleId");

                    b.HasIndex("AspNetUserId")
                        .IsUnique();

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(15,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Fee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric(15,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.FeesReportByClient", b =>
                {
                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal?>("TimeInHours")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("ClientName");

                    b.ToTable("FeesReportByClient");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.FeesReportByEmployee", b =>
                {
                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal?>("TimeInHours")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("EmployeeName");

                    b.ToTable("FeesReportByEmployee");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.FeesReportByProject", b =>
                {
                    b.Property<string>("ProjectReference")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal?>("TimeInHours")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("ProjectReference");

                    b.ToTable("FeesReportByProject");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.LawyersView", b =>
                {
                    b.Property<string>("AspNetUserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.ToView("LawyersView");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.LeadingLawyersView", b =>
                {
                    b.Property<string>("AspNetUserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.ToView("LeadingLawyersView");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.PartnersView", b =>
                {
                    b.Property<string>("AspNetUserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.ToView("PartnersView");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Partner"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Senior Associate"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Associate"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Solicitor"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Trainee"
                        });
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("IdForYear")
                        .HasColumnType("int");

                    b.Property<int?>("LeadingLawyerId")
                        .HasColumnType("int");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric(15,4)");

                    b.Property<string>("Reference")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("TypeProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeProjectStatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("VatRate")
                        .HasColumnType("numeric(15,2)");

                    b.Property<int>("YearOfProject")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("LeadingLawyerId");

                    b.HasIndex("PartnerId");

                    b.HasIndex("TypeProjectId");

                    b.HasIndex("TypeProjectStatusId");

                    b.HasIndex("VatRate");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Color")
                        .HasColumnType("int");

                    b.Property<string>("CustomField1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int")
                        .HasColumnName("ResourceID");

                    b.Property<string>("ResourceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssignedId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("date");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TaskCompletion")
                        .HasColumnType("int")
                        .HasColumnName("TaskCompletion");

                    b.Property<int>("TaskPriorityId")
                        .HasColumnType("int");

                    b.Property<bool>("TaskReminder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("TaskReminderDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TaskStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignedId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TaskPriorityId");

                    b.HasIndex("TaskStatusId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Time", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<int>("Minutes")
                        .HasColumnType("int");

                    b.Property<bool?>("Paid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("TimeInMinutes")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("([Hours]*(60)+[Minutes])");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.TypeClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TypeClients");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.TypeProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Reference")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("TypeProjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Due Diligence",
                            Reference = "DD"
                        },
                        new
                        {
                            Id = 2,
                            Name = " General Legal Service",
                            Reference = "GLS"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Arbitration",
                            Reference = "A"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Civil litigation",
                            Reference = "CL"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Pre-litigation measures",
                            Reference = "PLM"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Administrative Case",
                            Reference = "AC"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Enforcement procedure",
                            Reference = "EP"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Obtaining Enforceable Court order",
                            Reference = "EOCO"
                        });
                });

            modelBuilder.Entity("LMS.WebAPI.Models.TypeProjectStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TypeProjectStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Completed"
                        });
                });

            modelBuilder.Entity("LMS.WebAPI.Models.TypeTaskPriority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TypeTaskPriorities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Normal"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Urgent"
                        },
                        new
                        {
                            Id = 4,
                            Name = "High"
                        });
                });

            modelBuilder.Entity("LMS.WebAPI.Models.TypeTaskStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TypeTaskStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Not Started"
                        },
                        new
                        {
                            Id = 2,
                            Name = "In Progress"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Need Assistance"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Deffered"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Completed"
                        });
                });

            modelBuilder.Entity("LMS.WebAPI.Models.VatRate", b =>
                {
                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("Rate");

                    b.ToTable("VatRates");

                    b.HasData(
                        new
                        {
                            Rate = 0m
                        },
                        new
                        {
                            Rate = 20m
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Appointment", b =>
                {
                    b.HasOne("LMS.WebAPI.Models.Employee", "Employee")
                        .WithMany("Appointments")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("Appointments_fk_Employees")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Client", b =>
                {
                    b.HasOne("LMS.WebAPI.Models.Country", "Country")
                        .WithMany("Clients")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("Clients_fk_Countries");

                    b.HasOne("LMS.WebAPI.Models.Employee", "LeadingLawyer")
                        .WithMany("ClientLeadingLawyers")
                        .HasForeignKey("LeadingLawyerId")
                        .HasConstraintName("Clients_fk_Employees_LeadingLawyers");

                    b.HasOne("LMS.WebAPI.Models.Employee", "Partner")
                        .WithMany("ClientPartners")
                        .HasForeignKey("PartnerId")
                        .HasConstraintName("Clients_fk_Employees_Partners");

                    b.HasOne("LMS.WebAPI.Models.TypeClient", "TypeClient")
                        .WithMany("Clients")
                        .HasForeignKey("TypeClientId")
                        .HasConstraintName("Clients_fk_TypeClients");

                    b.Navigation("Country");

                    b.Navigation("LeadingLawyer");

                    b.Navigation("Partner");

                    b.Navigation("TypeClient");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Employee", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "AspNetRole")
                        .WithMany()
                        .HasForeignKey("AspNetRoleId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "AspNetUser")
                        .WithMany()
                        .HasForeignKey("AspNetUserId");

                    b.HasOne("LMS.WebAPI.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("Employees_fk_Positions")
                        .IsRequired();

                    b.Navigation("AspNetRole");

                    b.Navigation("AspNetUser");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Expense", b =>
                {
                    b.HasOne("LMS.WebAPI.Models.Employee", "Employee")
                        .WithMany("Expenses")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("Expenses_fk_Employees")
                        .IsRequired();

                    b.HasOne("LMS.WebAPI.Models.Project", "Project")
                        .WithMany("Expenses")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("Expenses_fk_Projects")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Fee", b =>
                {
                    b.HasOne("LMS.WebAPI.Models.Employee", "Employee")
                        .WithMany("Fees")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("Fees_fk_Employees")
                        .IsRequired();

                    b.HasOne("LMS.WebAPI.Models.Project", "Project")
                        .WithMany("Fees")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("Fees_fk_Projects")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Project", b =>
                {
                    b.HasOne("LMS.WebAPI.Models.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("Projecst_fk_Clients")
                        .IsRequired();

                    b.HasOne("LMS.WebAPI.Models.Employee", "LeadingLawyer")
                        .WithMany("ProjectLeadingLawyers")
                        .HasForeignKey("LeadingLawyerId")
                        .HasConstraintName("Projects_fk_Employees_LeadingLawyers");

                    b.HasOne("LMS.WebAPI.Models.Employee", "Partner")
                        .WithMany("ProjectPartners")
                        .HasForeignKey("PartnerId")
                        .HasConstraintName("Projects_fk_Employees_Partners");

                    b.HasOne("LMS.WebAPI.Models.TypeProject", "TypeProject")
                        .WithMany("Projects")
                        .HasForeignKey("TypeProjectId")
                        .HasConstraintName("Project_fk_TypeProjects")
                        .IsRequired();

                    b.HasOne("LMS.WebAPI.Models.TypeProjectStatus", "TypeProjectStatus")
                        .WithMany("Projects")
                        .HasForeignKey("TypeProjectStatusId")
                        .HasConstraintName("Project_fk_TypeProjectStatuses");

                    b.HasOne("LMS.WebAPI.Models.VatRate", "VatRateNavigation")
                        .WithMany("Projects")
                        .HasForeignKey("VatRate")
                        .HasConstraintName("Projects_fk_VatRates")
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("LeadingLawyer");

                    b.Navigation("Partner");

                    b.Navigation("TypeProject");

                    b.Navigation("TypeProjectStatus");

                    b.Navigation("VatRateNavigation");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Task", b =>
                {
                    b.HasOne("LMS.WebAPI.Models.Employee", "Assigned")
                        .WithMany("TaskAssigneds")
                        .HasForeignKey("AssignedId")
                        .HasConstraintName("Tasks_fk_Employees_Assigned")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMS.WebAPI.Models.Employee", "Owner")
                        .WithMany("TaskOwners")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("Tasks_fk_Employees_Owners")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMS.WebAPI.Models.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("Tasks_fk_Projects");

                    b.HasOne("LMS.WebAPI.Models.TypeTaskPriority", "TaskPriority")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskPriorityId")
                        .HasConstraintName("Tasks_fk_TypeTaskPriorities")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMS.WebAPI.Models.TypeTaskStatus", "TaskStatus")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskStatusId")
                        .HasConstraintName("Tasks_fk_TypeTaskStatuses")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assigned");

                    b.Navigation("Owner");

                    b.Navigation("Project");

                    b.Navigation("TaskPriority");

                    b.Navigation("TaskStatus");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Time", b =>
                {
                    b.HasOne("LMS.WebAPI.Models.Employee", "Employee")
                        .WithMany("Times")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("Times_fk_Employees")
                        .IsRequired();

                    b.HasOne("LMS.WebAPI.Models.Project", "Project")
                        .WithMany("Times")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("Times_fk_Projects")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Client", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Country", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Employee", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("ClientLeadingLawyers");

                    b.Navigation("ClientPartners");

                    b.Navigation("Expenses");

                    b.Navigation("Fees");

                    b.Navigation("ProjectLeadingLawyers");

                    b.Navigation("ProjectPartners");

                    b.Navigation("TaskAssigneds");

                    b.Navigation("TaskOwners");

                    b.Navigation("Times");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.Project", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Fees");

                    b.Navigation("Tasks");

                    b.Navigation("Times");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.TypeClient", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.TypeProject", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.TypeProjectStatus", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.TypeTaskPriority", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.TypeTaskStatus", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("LMS.WebAPI.Models.VatRate", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
